architectury {
    common(enabled_platforms.split(",")) {
        // This means map neoforge to forge
        //it.platformPackage "neoforge", "forge"
    }
}

loom {
    accessWidenerPath = file("src/main/resources/a_good_place.accesswidener")
}

sourceSets.create("example"){
    var main = sourceSets.main
    compileClasspath += main.compileClasspath + main.output
    runtimeClasspath += main.runtimeClasspath + main.output
}


dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"

    modImplementation("maven.modrinth:sodium:mc1.21.4-0.6.6-fabric")
    modImplementation("curse.maven:continuity-531351:6027976")

}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.mod_id
            from components.java
        }
    }

    repositories {
        // Add repositories to publish to here.
    }
}
